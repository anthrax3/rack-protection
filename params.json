{
  "name": "Rack::Protection",
  "tagline": "Protect against typical web attacks, works with all Rack apps, including Rails.",
  "body": "[![Build Status](https://secure.travis-ci.org/sinatra/rack-protection.png)](http://travis-ci.org/sinatra/rack-protection)\r\n\r\nThis gem protects against typical web attacks.\r\nShould work for all Rack apps, including Rails.\r\n\r\n# Usage\r\n\r\nUse all protections you probably want to use:\r\n\r\n``` ruby\r\n# config.ru\r\nrequire 'rack/protection'\r\nuse Rack::Protection\r\nrun MyApp\r\n```\r\n\r\nSkip a single protection middleware:\r\n\r\n``` ruby\r\n# config.ru\r\nrequire 'rack/protection'\r\nuse Rack::Protection, :except => :path_traversal\r\nrun MyApp\r\n```\r\n\r\nUse a single protection middleware:\r\n\r\n``` ruby\r\n# config.ru\r\nrequire 'rack/protection'\r\nuse Rack::Protection::AuthenticityToken\r\nrun MyApp\r\n```\r\n\r\n# Prevented Attacks\r\n\r\n## Cross Site Request Forgery\r\n\r\nPrevented by:\r\n\r\n* `Rack::Protection::AuthenticityToken` (not included by `use Rack::Protection`)\r\n* `Rack::Protection::FormToken` (not included by `use Rack::Protection`)\r\n* `Rack::Protection::JsonCsrf`\r\n* `Rack::Protection::RemoteReferrer` (not included by `use Rack::Protection`)\r\n* `Rack::Protection::RemoteToken`\r\n* `Rack::Protection::HttpOrigin`\r\n\r\n## Cross Site Scripting\r\n\r\nPrevented by:\r\n\r\n* `Rack::Protection::EscapedParams` (not included by `use Rack::Protection`)\r\n* `Rack::Protection::XSSHeader` (Internet Explorer only)\r\n* `Rack::Protection::ContentSecurityPolicy`\r\n\r\n## Clickjacking\r\n\r\nPrevented by:\r\n\r\n* `Rack::Protection::FrameOptions`\r\n\r\n## Directory Traversal\r\n\r\nPrevented by:\r\n\r\n* `Rack::Protection::PathTraversal`\r\n\r\n## Session Hijacking\r\n\r\nPrevented by:\r\n\r\n* `Rack::Protection::SessionHijacking`\r\n\r\n## IP Spoofing\r\n\r\nPrevented by:\r\n\r\n* `Rack::Protection::IPSpoofing`\r\n\r\n## Helps to protect against protocol downgrade attacks and cookie hijacking\r\n\r\nPrevented by:\r\n\r\n* `Rack::Protection::StrictTransport` (not included by `use Rack::Protection`)\r\n\r\n# Installation\r\n\r\n    gem install rack-protection\r\n\r\n# Instrumentation\r\n\r\nInstrumentation is enabled by passing in an instrumenter as an option.\r\n```\r\nuse Rack::Protection, instrumenter: ActiveSupport::Notifications\r\n```\r\n\r\nThe instrumenter is passed a namespace (String) and environment (Hash). The namespace is 'rack.protection' and the attack type can be obtained from the environment key 'rack.protection.attack'.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}